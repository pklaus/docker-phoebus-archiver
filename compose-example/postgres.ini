# ----------------------------

# RDB URL for archived data
#
# PostgreSQL example
org.csstudio.archive/url=jdbc:postgresql://db/archive
#
# MySQL example
# org.csstudio.archive/url=jdbc:mysql://localhost/archive?rewriteBatchedStatements=true

# RDB user and password
# Some applications also provide command-line option to override.
org.csstudio.archive/user=archive
org.csstudio.archive/password=$archive

# Schema name. Used with an added "." as prefix for table names.
# For now this is only used with Oracle URLs and ignored for MySQL
org.csstudio.archive/schema=

# Timeout [seconds] for certain SQL queries
# Fundamentally, the SQL queries for data take as long as they take
# and any artificial timeout just breaks queries that would otherwise
# have returned OK  few seconds after the timeout.
# We've seen Oracle lockups, though, that caused JDBC to hang forever
# because the SAMPLE table was locked. No error/exception, just hanging.
# A timeout is used for operations other than getting the actual data,
# for example the channel id-by-name query which _should_ return within
# a shot time, to catch that type of RDB lockup.
# timeout_secs=120
# With PostgreSQL, the setQueryTimeout API is not implemented,
# and calling it results in an exception.
# Setting the timeout to 0 disables calls to setQueryTimeout.
org.csstudio.archive/timeout_secs=0

# Use a blob to read/write array samples?
#
# The original SAMPLE table did not contain an ARRAY_VAL column
# for the array blob data, but instead used a separate ARRAY_VAL table.
# When running against an old database, this parameter must be set to false.
org.csstudio.archive/use_array_blob=true

# Name of sample table for writing
org.csstudio.archive/write_sample_table=sample

# Maximum length of text samples written to SAMPLE.STR_VAL
org.csstudio.archive/max_text_sample_length=80

# Use postgres copy instead of insert
org.csstudio.archive/use_postgres_copy=false

# Seconds between log messages for Not-a-Number, futuristic, back-in-time values, buffer overruns
# 24h = 24*60*60 = 86400
org.csstudio.archive/log_trouble_samples=86400
org.csstudio.archive/log_overrun=86400

# Write period in seconds
org.csstudio.archive/write_period=30

# Maximum number of repeat counts for scanned channels
org.csstudio.archive/max_repeats=60

# Write batch size
org.csstudio.archive/batch_size=500

# Buffer reserve (N times what's ideally needed)
org.csstudio.archive/buffer_reserve=2.0

# Samples with time stamps this far ahead of the local time
# are ignored
# 24*60*60 = 86400 = 1 day
org.csstudio.archive/ignored_future=86400


# https://github.com/shroffk/phoebus/blob/master/app/databrowser/src/main/resources/databrowser_preferences.properties
org.csstudio.trends.databrowser3/urls=jdbc:postgresql://db:5432/archive?user=report&password=$report|RDB
org.csstudio.trends.databrowser3/archives=jdbc:postgresql://db:5432/archive?user=report&password=$report|RDB
org.csstudio.trends.databrowser3/use_default_archives=true
org.csstudio.trends.databrowser3/drop_failed_archives=false
# Re-scale behavior when archived data arrives: NONE, STAGGER
org.csstudio.trends.databrowser3/archive_rescale=NONE
org.csstudio.trends.databrowser3/prompt_for_raw_data_request = false
org.csstudio.trends.databrowser3/prompt_for_visibility = false
org.csstudio.trends.databrowser3/archive_fetch_delay=200
org.csstudio.trends.databrowser3/use_auto_scale=true
